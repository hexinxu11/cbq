<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cbq.cleaning.mapper.IpBaseInfoMapper">
  <resultMap id="BaseResultMap" type="org.cbq.cleaning.entity.IpBaseInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="anonymous" jdbcType="INTEGER" property="anonymous" />
    <result column="ip_ownership" jdbcType="VARCHAR" property="ipOwnership" />
    <result column="req_method" jdbcType="VARCHAR" property="reqMethod" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ip, port, anonymous, ip_ownership, req_method, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ip_base_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ip_base_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cbq.cleaning.entity.IpBaseInfo">
    insert into ip_base_info (id, ip, port, 
      anonymous, ip_ownership, req_method, 
      status)
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, 
      #{anonymous,jdbcType=INTEGER}, #{ipOwnership,jdbcType=VARCHAR}, #{reqMethod,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.cbq.cleaning.entity.IpBaseInfo">
    insert into ip_base_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="ipOwnership != null">
        ip_ownership,
      </if>
      <if test="reqMethod != null">
        req_method,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="ipOwnership != null">
        #{ipOwnership,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null">
        #{reqMethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cbq.cleaning.entity.IpBaseInfo">
    update ip_base_info
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=INTEGER},
      </if>
      <if test="ipOwnership != null">
        ip_ownership = #{ipOwnership,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null">
        req_method = #{reqMethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cbq.cleaning.entity.IpBaseInfo">
    update ip_base_info
    set ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      anonymous = #{anonymous,jdbcType=INTEGER},
      ip_ownership = #{ipOwnership,jdbcType=VARCHAR},
      req_method = #{reqMethod,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>